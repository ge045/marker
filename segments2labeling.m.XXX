function labeling = segments2labeling(segments, totalsize)
% function labeling = segments2labeling(segments, totalsize)
%
% is the inverse operation of
% SEGMENTS = LABELING2SEGMENTS(LABELING).
%
% ATTENTION: length(SEGMENTS2LABELING(LABELING2SEGMENTS(LABELING))) most
% likely won't be length(LABELING), because the list of segments does
% not contain information whether there is any nor how long the last
% zero-label is. However this behaviour can be achieved with the optional
% parameter totalsize. The labeling will be extended to this size.
%
% See also LABELING2SEGMENTS.

% Copyright 2005 Georg Ogris, UMIT CSN Innsbruck
% Copyright 2005 Oliver Amft, ETH Zurich, Wearable Computing Lab.

% -------------------------------------------------------------------
% This file is part of the MARKER Matlab toolbox.
%
%     MARKER is free software; you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation; version 2 of the License.
% 
%     MARKER is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU General Public License for more details.
% 
%     You should have received a copy of the GNU General Public License
%     along with MARKER; if not, write to the Free Software
%     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
%
% A full text of this license can be found in license_gpl.txt.
% -------------------------------------------------------------------

labeling = [];

if (exist('totalsize','var')~=1), totalsize = segments(end,2); end;
if isempty(totalsize), return; end;

if (size(segments,2) >= 4), labels = segments(:,4); else labels = ones(size(segments,1),1); end;

labeling = zeros( totalsize,1 );
for seg = 1:size(segments,1)
    labeling( segments(seg,1) : segments(seg,2) ) = labels(seg);
end
