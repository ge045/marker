function marker_helpscreen(fh, drawerobj)
% function marker_helpscreen(fh, drawerobj)
%
% display shortcut helpscreen

% Copyright 2006 Oliver Amft, ETH Zurich, Wearable Computing Lab.

% -------------------------------------------------------------------
% This file is part of the MARKER Matlab toolbox.
%
%     MARKER is free software; you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation; version 2 of the License.
%
%     MARKER is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU General Public License for more details.
% 
%     You should have received a copy of the GNU General Public License
%     along with MARKER; if not, write to the Free Software
%     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
%
% A full text of this license can be found in license_gpl.txt.
% -------------------------------------------------------------------

% prefer lower keys to prevent keyboard from being destroyed
% free keys: f j o s q u w y

% string preparations
defaultlabelstr = '';
suspenddefaultlabelstr = '(N/A)';
if (drawerobj.defaultlabel)
    defaultlabelstr = ['(' num2str(drawerobj.defaultlabel) ')'];
    suspenddefaultlabelstr = 'suspend default label';
end;
if (drawerobj.olddefaultlabel)
    suspenddefaultlabelstr = 'enable default label';
end;
if (drawerobj.editnplay)
	editnplaylabelstr = 'Disable'; else editnplaylabelstr = 'Enable';
end;
if (drawerobj.labelovcheck), labelovcheckstr = 'disable'; else labelovcheckstr = 'enable'; end;


% fprintf('\n-------------------------------------------------------------------');
fprintf('\n--- MARKER %s keyboard shortcut help ---\n', marker_version);

fs_groups = {'edit', 'delete', 'move', 'io', 'misc'};
fs_grouptext = {'Editing labels', 'Deleting labels', 'Moving through data', 'I/O commands', 'Other commands'};

fstring.edit = { ...
    'e', 'Create (pointer)',      'm', 'Cut/modify', ...
    'Shift+e', 'Create (keyboard)', ...
    'Point', 'Extend/crop', ...
	'Comma', 'Extend to another/tile', ...
    'w', 'Change label ID...', ...
    't', 'Toggle tentative', ...
	'c', 'Comment/tag (not supported)', ...
	'Alt+e', [editnplaylabelstr ' edit''n''play'], ...
    };
fstring.delete = { ...
    'd', 'Delete (pointer)', ...
    'Shift+d', 'Delete all...', ...
    'Shift+c', 'Delete (keyboard)', ...
    'Alt+d', 'Selective delete/prune...'
    };
fstring.move = { ...
    'b/n', 'Back/forward (0.5x screen)', ...
    'z', 'Horizontal zoom out/in...', ...
    'Alt+b/n', 'Back/forward (0.25x screen)', ...
    'v', 'Vert. zoom/baseline move...', ...
    'Shift+b/n', 'Back/forward (1x screen)', ...
    'End', 'Jump to end of data', ... % ctrl+e
    'Home', 'Jump to begin of data', ... % ctrl+a
	'Ctrl+b/n', 'Jump to prev/next label', ...
	'Ctrl+g', 'Goto position', ...
	'Shift+z', 'Set zoom', ...
	'S+C+z', 'Full zoom', ...
    };
fstring.io = { ...
    'Ctrl+o', 'Open...', ...
    'Shift+l', 'Lists & statistics...', ...
    'Ctrl+s', 'Save', ...
	'S+C+s', 'Save as...', ...
    'Ctrl+x', 'Export figure graphics...', ...
	'Ctrl+i', 'Import from workspace...', ...
    };
fstring.misc = { ...
    'h/?', 'This screen',               'r', 'Redraw view', ...
    'a', 'Data alignment...',           'p', 'Play section...', ...
	'Alt+p', 'Play up to label bounds', ...
	'Shift+p', 'Select player', ...
    'Shift+s', 'Show/hide signals in a plot...', ...
    'Alt+s', 'Show/hide plot', ...
	'Alt+l', 'Show/hide labels', ...
    'i', 'Label information', ...
    'Alt+c', 'Data cursor/probe', ...
    'Alt+j', [labelovcheckstr ' label overlap check'], ...
    'Shift+w', ['(un)set default label ' defaultlabelstr],  ...
    'Alt+w', suspenddefaultlabelstr, ...
	'Ctrl+p', 'Marker properties...', ...
    'q', 'Quit program', ...
    };


str = [];
for fs = 1:length(fs_groups)
    str = [str sprintf('\n--- %s ', fs_grouptext{fs}) repmat('-',1,76-length(fs_grouptext{fs}))];
    str = [str sprintf('\n')]; 
    
    for i = 1:ceil(length(fstring.(fs_groups{fs}))/2)
        str = [str sprintf(' %-10s %-30s',  fstring.(fs_groups{fs}){i*2-1}, fstring.(fs_groups{fs}){i*2})];
        if (rem(i,2)==0) && (i < ceil(length(fstring.(fs_groups{fs}))/2))
            str = [str sprintf('\n')]; 
        end;
    end;
end;

str = [ str sprintf('\n') ];
str = [ str sprintf('\nTo exit from functions use right mouse button (or as indicated).') ];
str = [ str sprintf('\n\n') ];

%marker_menudlg(fh, drawerobj, 'infodlg', str, 'MARKER help');
disp(str);
